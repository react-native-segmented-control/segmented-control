name: Build
on: pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get pnpm cache
        id: pnpm-cache
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.pnpm-cache.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install Dependencies
        run: pnpm install
      - name: ESLint Checks
        run: pnpm lint
  flow:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get pnpm cache
        id: pnpm-cache
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.pnpm-cache.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install Dependencies
        run: pnpm
      - name: Flow Checks
        run: pnpm flow check
  tsc:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get pnpm cache
        id: pnpm-cache
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.pnpm-cache.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install Dependencies
        run: pnpm
      - name: TypeScript type check
        run: pnpm tsc
  android:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16]
        java-version: [11]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java-version }}
      - name: Get pnpm cache
        id: pnpm-cache
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.pnpm-cache.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install Dependencies
        run: pnpm
      - name: Install Example Dependencies
        run: cd example && pnpm
      - name: Build android
        run: cd example && pnpm build:android
      - name: Build Android Example App and Library
        run: cd example/android && ./gradlew clean assembleDebug
  ios:
    runs-on: macos-latest
    strategy:
      matrix:
        node-version: [16]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get pnpm cache
        id: pnpm-cache
        run: echo "::set-output name=dir::$(pnpm store path)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.pnpm-cache.outputs.dir }}
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Install Dependencies
        run: pnpm
      - name: Build ios
        run: cd example && pnpm build:ios
      - name: Pod install
        run: cd example && pod install --project-directory=ios
      - name: Run ios app
        run: cd example && pnpm ios
